<?xml version="1.0"?>
<launch>

  <arg name="load_driver" default="true"/>
  <arg name="robot_ip" default="10.0.1.172"/>
  <arg name="reverse_port" default="50001"/>

  <!-- basics -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find e2u_demo_setup)/urdf/ur5_table.urdf.xacro'" />
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" />
  
  <!-- send ROBOT parameters to parameter server -->
  <rosparam command="load" ns="/script_server/arm" file="$(find e2u_demo_setup)/config/arm_joint_configurations_general.yaml"/> <!-- general params -->
  <rosparam command="load" ns="/script_server/arm" file="$(find e2u_demo_setup)/config/arm_joint_action_name_real.yaml"/> <!-- action name for real operation -->

  <!-- camera -->
  <!--include file="$(find freenect_launch)/launch/freenect.launch" -->
  <include file="$(find openni2_launch)/launch/openni2.launch" >
    <arg name="load_driver" value="$(arg load_driver)" />
  </include>

  <!-- arm -->
  <node name="ur_driver" pkg="ur_driver" type="driver.py" args="$(arg robot_ip) $(arg reverse_port)" output="screen">
  </node>

  <!-- perception -->
  <!--include file="$(find box_detection)/launch/simple_segmentation.launch" /-->
  <include file="$(find agile_grasp)/launch/suction_grasp_launch.launch" />

  <!-- manipulation -->
  <!--include file="$(find ur5_moveit_config)/launch/move_group.launch" /-->
  <include file="$(find e2u_moveit_config)/launch/move_group.launch" />

</launch>
